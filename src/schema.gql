# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  """Role id"""
  id: Int!

  """Role name"""
  name: String!

  """Role permissions"""
  permissions: [String!]!

  """Role created at"""
  createdAt: DateTime!

  """Role updated at"""
  updatedAt: DateTime!

  """Role deleted at"""
  deletedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  """User id"""
  id: Int!

  """User name"""
  name: String!

  """User discord id"""
  discordId: String!

  """User avatar url"""
  avatar: String!

  """User role"""
  role: Role!

  """User refresh token"""
  refreshToken: String!

  """User created at"""
  createdAt: DateTime!

  """User updated at"""
  updatedAt: DateTime!

  """User deleted at"""
  deletedAt: DateTime!
}

type Blueprint {
  id: Int!
  name: String!
  slug: String!
  icon: String!
  banner: String!
  description: String!
  category: String!
  tags: [String!]!
  visibility: ProjectVisibility!
  status: ProjectStatus!
  owner: User!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""Visibility of the project"""
enum ProjectVisibility {
  PUBLIC
  PRIVATE
  UNLISTED
}

"""Status of the project"""
enum ProjectStatus {
  DRAFT
  MODERATION
  PUBLISHED
}

type Query {
  users: [User!]!
  user(id: Int!): User!
  me: User!
  userByDiscordId(discordId: String!): User!
  roles: [Role!]!
  role(id: Int!): Role!
  blueprints: [Blueprint!]!
  blueprint(id: Int!): Blueprint!
}

type Mutation {
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  updateUserAvatar(avatar: String!, id: Int!): User!
  createRole(createRoleInput: CreateRoleInput!): Role!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  removeRole(id: Int!): Role!
  createBlueprint(createBlueprintInput: CreateBlueprintInput!): Blueprint!
  updateBlueprint(updateBlueprintInput: UpdateBlueprintInput!): Blueprint!
  removeBlueprint(id: Int!): Blueprint!
}

input UpdateUserInput {
  """User name"""
  name: String

  """User discord id"""
  discordId: String

  """User avatar url"""
  avatar: String

  """User refresh token"""
  refreshToken: String
  id: Int!
}

input CreateRoleInput {
  """Role name"""
  name: String!

  """Role permissions"""
  permissions: [String!]!
}

input UpdateRoleInput {
  """Role name"""
  name: String

  """Role permissions"""
  permissions: [String!]
  id: Int!
}

input CreateBlueprintInput {
  """Name of the blueprint project"""
  name: String!

  """Slug link for project"""
  slug: String!

  """Visibility of the project"""
  visibility: ProjectVisibility!
}

input UpdateBlueprintInput {
  """Name of the blueprint project"""
  name: String

  """Slug link for project"""
  slug: String

  """Visibility of the project"""
  visibility: ProjectVisibility
  id: Int!

  """Name of the blueprint project"""
  descriprion: String

  """status of the project"""
  status: ProjectStatus

  """Icon of the project"""
  icon: String

  """Banner of the project"""
  banner: String

  """Category of the project"""
  category: String

  """Tags of the project"""
  tags: [String!]

  """File of the project"""
  file: String
}