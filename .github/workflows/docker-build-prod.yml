name: Docker Build, Test, and Push Production

on:
  push:
    branches:
      - master

jobs:
  # Job для lint теста
  lint-test:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг 2: Установка Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Шаг 3: Установка pnpm
      - name: Install pnpm
        run: npm install -g pnpm

      # Шаг 4: Установка зависимостей
      - name: Install dependencies
        run: pnpm install

      # Шаг 5: Запуск тестов
      - name: Run lint Tests
        run: pnpm lint
        
  # Job для тестирования
  test:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг 2: Установка Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Шаг 3: Установка pnpm
      - name: Install pnpm
        run: npm install -g pnpm

      # Шаг 4: Установка зависимостей
      - name: Install dependencies
        run: pnpm install

      # Шаг 5: Запуск тестов
      - name: Run Tests
        run: pnpm test

  # Job для сборки и публикации Docker-образа
  build-and-push:
    runs-on: ubuntu-latest
    needs: [test, lint-test]
    
    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг 2: Настройка Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Шаг 3: Логин в Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Шаг 4: Сборка и пуш образа для x86 и ARM
      - name: Build and push multi-arch Docker image
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag dalynka/addorium-backend:prod \
            --push .
